{"version":3,"file":"animations.K6esWs04.js","sources":["../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../../node_modules/framer-motion/dist/es/utils/noop.mjs","../../node_modules/framer-motion/dist/es/utils/errors.mjs","../../node_modules/framer-motion/dist/es/motion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../../node_modules/framer-motion/dist/es/utils/clamp.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../../node_modules/framer-motion/dist/es/value/types/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/get-will-change-name.mjs","../../node_modules/framer-motion/dist/es/utils/array.mjs","../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../../node_modules/framer-motion/dist/es/events/event-info.mjs","../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../../node_modules/framer-motion/dist/es/utils/pipe.mjs","../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../../node_modules/framer-motion/dist/es/gestures/hover.mjs","../../node_modules/framer-motion/dist/es/gestures/focus.mjs","../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../../node_modules/framer-motion/dist/es/gestures/press.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../../node_modules/framer-motion/dist/es/utils/memo.mjs","../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../../node_modules/framer-motion/dist/es/easing/ease.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../../node_modules/framer-motion/dist/es/easing/circ.mjs","../../node_modules/framer-motion/dist/es/easing/back.mjs","../../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../../node_modules/framer-motion/dist/es/utils/progress.mjs","../../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/observe.mjs","../../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../../node_modules/framer-motion/dist/es/value/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/WillChangeMotionValue.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../../node_modules/framer-motion/dist/es/render/store.mjs","../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../../node_modules/framer-motion/dist/es/render/dom/motion-minimal.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/utils.mjs","../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs","../../node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs","../../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../../node_modules/framer-motion/dist/es/render/dom/utils/resolve-element.mjs","../../node_modules/framer-motion/dist/es/render/dom/viewport/index.mjs","../../node_modules/framer-motion/dist/es/utils/use-in-view.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nlet scheduleHandoffComplete = false;\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] &&\n        !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            if (!scheduleHandoffComplete) {\n                scheduleHandoffComplete = true;\n                queueMicrotask(completeHandoff);\n            }\n        }\n    });\n    return visualElement;\n}\nfunction completeHandoff() {\n    window.HandoffComplete = true;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","const noop = (any) => any;\n\nexport { noop };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","import { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createMotionComponent };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\nconst colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\nconst singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\nfunction isNullish(v) {\n    return v == null;\n}\n\nexport { colorRegex, floatRegex, isNullish, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst startsAsVariableToken = checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    /**\n     * If the willChange style has been manually set as a string, set\n     * applyWillChange to false to prevent it from automatically being applied.\n     */\n    if (visualElement && style && typeof style.willChange === \"string\") {\n        visualElement.applyWillChange = false;\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { acceleratedValues } from '../../animation/animators/utils/accelerated-values.mjs';\nimport { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction getWillChangeName(name) {\n    if (transformProps.has(name)) {\n        return \"transform\";\n    }\n    else if (acceleratedValues.has(name)) {\n        return camelToDash(name);\n    }\n}\n\nexport { getWillChangeName };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { getWillChangeName } from '../../value/use-will-change/get-will-change-name.mjs';\nimport { addUniqueItem } from '../../utils/array.mjs';\n\nfunction makeState({ applyWillChange = false, scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext, isStatic) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, isStatic ? false : applyWillChange, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext, isStatic);\n    return isStatic ? make() : useConstant(make);\n};\nfunction addWillChange(willChange, name) {\n    const memberName = getWillChangeName(name);\n    if (memberName) {\n        addUniqueItem(willChange, memberName);\n    }\n}\nfunction forEachDefinition(props, definition, callback) {\n    const list = Array.isArray(definition) ? definition : [definition];\n    for (let i = 0; i < list.length; i++) {\n        const resolved = resolveVariantFromProps(props, list[i]);\n        if (resolved) {\n            const { transitionEnd, transition, ...target } = resolved;\n            callback(target, transitionEnd);\n        }\n    }\n}\nfunction makeLatestValues(props, context, presenceContext, shouldApplyWillChange, scrapeMotionValues) {\n    var _a;\n    const values = {};\n    const willChange = [];\n    const applyWillChange = shouldApplyWillChange && ((_a = props.style) === null || _a === void 0 ? void 0 : _a.willChange) === undefined;\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        forEachDefinition(props, variantToSet, (target, transitionEnd) => {\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd) {\n                values[key] = transitionEnd[key];\n            }\n        });\n    }\n    // Add animating values to will-change\n    if (applyWillChange) {\n        if (animate && initial !== false && !isAnimationControls(animate)) {\n            forEachDefinition(props, animate, (target) => {\n                for (const key in target) {\n                    addWillChange(willChange, key);\n                }\n            });\n        }\n        if (willChange.length) {\n            values.willChange = willChange.join(\",\");\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        applyWillChange: true,\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[`${pointType}X`],\n            y: event[`${pointType}Y`],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = isActive ? \"pointerenter\" : \"pointerleave\";\n    const callbackName = isActive ? \"onHoverStart\" : \"onHoverEnd\";\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        const callback = props[callbackName];\n        if (callback) {\n            frame.postRender(() => callback(event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                const handler = !globalTapTarget &&\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel\n                    : onTap;\n                if (handler) {\n                    frame.update(() => handler(endEvent, endInfo));\n                }\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, {\n                passive: !(props.onTap || props[\"onPointerUp\"]),\n            });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), {\n                passive: !(props.onTapCancel ||\n                    props[\"onPointerCancel\"]),\n            });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.postRender(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.postRender(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.postRender(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, {\n            passive: !(props.onTapStart ||\n                props[\"onPointerStart\"]),\n        });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return (transition[key] ||\n        transition[\"default\"] ||\n        transition);\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { isString, singleColorRegex, isNullish, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, motionValue === null || motionValue === void 0 ? void 0 : motionValue.owner, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from '../../../utils/errors.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return hasKeyframesChanged(keyframes) || (type === \"spring\" && velocity);\n}\n\nexport { canAnimate };\n","import { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from '../errors.mjs';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from '../errors.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { invariant } from './errors.mjs';\nimport { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor({ KeyframeResolver: KeyframeResolver$1 = KeyframeResolver, ...options }) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, keyframes } = this.options;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        if (name && motionValue && motionValue.owner) {\n            this.resolver = motionValue.owner.resolveKeyframes(keyframes, onResolved, name, motionValue);\n        }\n        else {\n            this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue);\n        }\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime || this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && easing in supportedWaapiEasing) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasingWithDefault(easing) {\n    return (mapEasingToNativeEasing(easing) ||\n        supportedWaapiEasing.easeOut);\n}\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map(mapEasingToNativeEasingWithDefault);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { memo } from '../../utils/memo.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { animateStyle } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return options.type === \"spring\" || !isWaapiSupportedEasing(options.ease);\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = animateStyle(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = time.now();\n        if (this.pendingTimeline) {\n            animation.timeline = this.pendingTimeline;\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nfunction observeTimeline(update, timeline) {\n    let prevProgress;\n    const onFrame = () => {\n        const { currentTime } = timeline;\n        const percentage = currentTime === null ? 0 : currentTime.value;\n        const progress = percentage / 100;\n        if (prevProgress !== progress) {\n            update(progress);\n        }\n        prevProgress = progress;\n    };\n    frame.update(onFrame, true);\n    return () => cancelFrame(onFrame);\n}\n\nexport { observeTimeline };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { observeTimeline } from '../render/dom/scroll/observe.mjs';\nimport { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline) {\n        const cancelAll = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                animation.attachTimeline(timeline);\n            }\n            else {\n                animation.pause();\n                return observeTimeline((progress) => {\n                    animation.time = animation.duration * progress;\n                }, timeline);\n            }\n        });\n        return () => {\n            cancelAll.forEach((cancelTimeline, i) => {\n                if (cancelTimeline)\n                    cancelTimeline();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff, \n/**\n * Currently used to remove values from will-change when an animation ends.\n * Preferably this would be handled by event listeners on the MotionValue\n * but these aren't consistent enough yet when considering the different ways\n * an animation can be cancelled.\n */\nonEnd) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n            onEnd && onEnd();\n        },\n        onStop: onEnd,\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.3.21\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.getProps()[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","import { MotionValue } from '../index.mjs';\nimport { getWillChangeName } from './get-will-change-name.mjs';\nimport { removeItem } from '../../utils/array.mjs';\n\nclass WillChangeMotionValue extends MotionValue {\n    constructor() {\n        super(...arguments);\n        this.output = [];\n        this.counts = new Map();\n    }\n    add(name) {\n        const styleName = getWillChangeName(name);\n        if (!styleName)\n            return;\n        /**\n         * Update counter. Each value has an indepdent counter\n         * as multiple sources could be requesting the same value\n         * gets added to will-change.\n         */\n        const prevCount = this.counts.get(styleName) || 0;\n        this.counts.set(styleName, prevCount + 1);\n        if (prevCount === 0) {\n            this.output.push(styleName);\n            this.update();\n        }\n        /**\n         * Prevents the remove function from being called multiple times.\n         */\n        let hasRemoved = false;\n        return () => {\n            if (hasRemoved)\n                return;\n            hasRemoved = true;\n            const newCount = this.counts.get(styleName) - 1;\n            this.counts.set(styleName, newCount);\n            if (newCount === 0) {\n                removeItem(this.output, styleName);\n                this.update();\n            }\n        };\n    }\n    update() {\n        this.set(this.output.length ? this.output.join(\", \") : \"auto\");\n    }\n}\n\nexport { WillChangeMotionValue };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { WillChangeMotionValue } from './WillChangeMotionValue.mjs';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    var _a;\n    if (!visualElement.applyWillChange)\n        return;\n    let willChange = visualElement.getValue(\"willChange\");\n    /**\n     * If we haven't created a willChange MotionValue, and the we haven't been\n     * manually provided one, create one.\n     */\n    if (!willChange && !((_a = visualElement.props.style) === null || _a === void 0 ? void 0 : _a.willChange)) {\n        willChange = new WillChangeMotionValue(\"auto\");\n        visualElement.addValue(\"willChange\", willChange);\n    }\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.HandoffAppearAnimations) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    isHandoff = true;\n                }\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff, addValueToWillChange(visualElement, key)));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.3.21\", `Attempting to mix Framer Motion versions ${nextValue.version} with 11.3.21 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * If true, will-change will be applied to the element. Only HTMLVisualElements\n         * currently support this.\n         */\n        this.applyWillChange = false;\n        this.resolveKeyframes = (keyframes, \n        // We use an onComplete callback here rather than a Promise as a Promise\n        // resolution is a microtask and we want to retain the ability to force\n        // the resolution of keyframes synchronously.\n        onComplete, name, value) => {\n            return new this.KeyframeResolver(keyframes, onComplete, name, value, this);\n        };\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            this.isRenderScheduled = false;\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.isRenderScheduled = false;\n        this.scheduleRender = () => {\n            if (!this.isRenderScheduled) {\n                this.isRenderScheduled = true;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.applyWillChange = true;\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\n\n/**\n * @public\n */\nconst m = createMotionProxy(createDomMotionConfig);\n\nexport { m };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useRef, useContext, useInsertionEffect } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\n/**\n * Measurement functionality has to be within a separate component\n * to leverage snapshot lifecycle.\n */\nclass PopChildMeasure extends React.Component {\n    getSnapshotBeforeUpdate(prevProps) {\n        const element = this.props.childRef.current;\n        if (element && prevProps.isPresent && !this.props.isPresent) {\n            const size = this.props.sizeRef.current;\n            size.height = element.offsetHeight || 0;\n            size.width = element.offsetWidth || 0;\n            size.top = element.offsetTop;\n            size.left = element.offsetLeft;\n        }\n        return null;\n    }\n    /**\n     * Required with getSnapshotBeforeUpdate to stop React complaining.\n     */\n    componentDidUpdate() { }\n    render() {\n        return this.props.children;\n    }\n}\nfunction PopChild({ children, isPresent }) {\n    const id = useId();\n    const ref = useRef(null);\n    const size = useRef({\n        width: 0,\n        height: 0,\n        top: 0,\n        left: 0,\n    });\n    const { nonce } = useContext(MotionConfigContext);\n    /**\n     * We create and inject a style block so we can apply this explicit\n     * sizing in a non-destructive manner by just deleting the style block.\n     *\n     * We can't apply size via render as the measurement happens\n     * in getSnapshotBeforeUpdate (post-render), likewise if we apply the\n     * styles directly on the DOM node, we might be overwriting\n     * styles set via the style prop.\n     */\n    useInsertionEffect(() => {\n        const { width, height, top, left } = size.current;\n        if (isPresent || !ref.current || !width || !height)\n            return;\n        ref.current.dataset.motionPopId = id;\n        const style = document.createElement(\"style\");\n        if (nonce)\n            style.nonce = nonce;\n        document.head.appendChild(style);\n        if (style.sheet) {\n            style.sheet.insertRule(`\n          [data-motion-pop-id=\"${id}\"] {\n            position: absolute !important;\n            width: ${width}px !important;\n            height: ${height}px !important;\n            top: ${top}px !important;\n            left: ${left}px !important;\n          }\n        `);\n        }\n        return () => {\n            document.head.removeChild(style);\n        };\n    }, [isPresent]);\n    return (jsx(PopChildMeasure, { isPresent: isPresent, childRef: ref, sizeRef: size, children: React.cloneElement(children, { ref }) }));\n}\n\nexport { PopChild };\n","import { jsx } from 'react/jsx-runtime';\nimport * as React from 'react';\nimport { useId, useMemo } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { PopChild } from './PopChild.mjs';\n\nconst PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode, }) => {\n    const presenceChildren = useConstant(newChildrenMap);\n    const id = useId();\n    const context = useMemo(() => ({\n        id,\n        initial,\n        isPresent,\n        custom,\n        onExitComplete: (childId) => {\n            presenceChildren.set(childId, true);\n            for (const isComplete of presenceChildren.values()) {\n                if (!isComplete)\n                    return; // can stop searching when any is incomplete\n            }\n            onExitComplete && onExitComplete();\n        },\n        register: (childId) => {\n            presenceChildren.set(childId, false);\n            return () => presenceChildren.delete(childId);\n        },\n    }), \n    /**\n     * If the presence of a child affects the layout of the components around it,\n     * we want to make a new context value to ensure they get re-rendered\n     * so they can detect that layout change.\n     */\n    presenceAffectsLayout ? [Math.random()] : [isPresent]);\n    useMemo(() => {\n        presenceChildren.forEach((_, key) => presenceChildren.set(key, false));\n    }, [isPresent]);\n    /**\n     * If there's no `motion` components to fire exit animations, we want to remove this\n     * component immediately.\n     */\n    React.useEffect(() => {\n        !isPresent &&\n            !presenceChildren.size &&\n            onExitComplete &&\n            onExitComplete();\n    }, [isPresent]);\n    if (mode === \"popLayout\") {\n        children = jsx(PopChild, { isPresent: isPresent, children: children });\n    }\n    return (jsx(PresenceContext.Provider, { value: context, children: children }));\n};\nfunction newChildrenMap() {\n    return new Map();\n}\n\nexport { PresenceChild };\n","import { Children, isValidElement } from 'react';\n\nconst getChildKey = (child) => child.key || \"\";\nfunction onlyElements(children) {\n    const filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, (child) => {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n\nexport { getChildKey, onlyElements };\n","import { jsx, Fragment } from 'react/jsx-runtime';\nimport { useMemo, useRef, useState, useContext } from 'react';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { invariant } from '../../utils/errors.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { onlyElements, getChildKey } from './utils.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nconst AnimatePresence = ({ children, exitBeforeEnter, custom, initial = true, onExitComplete, presenceAffectsLayout = true, mode = \"sync\", }) => {\n    invariant(!exitBeforeEnter, \"Replace exitBeforeEnter with mode='wait'\");\n    /**\n     * Filter any children that aren't ReactElements. We can only track components\n     * between renders with a props.key.\n     */\n    const presentChildren = useMemo(() => onlyElements(children), [children]);\n    /**\n     * Track the keys of the currently rendered children. This is used to\n     * determine which children are exiting.\n     */\n    const presentKeys = presentChildren.map(getChildKey);\n    /**\n     * If `initial={false}` we only want to pass this to components in the first render.\n     */\n    const isInitialRender = useRef(true);\n    /**\n     * A ref containing the currently present children. When all exit animations\n     * are complete, we use this to re-render the component with the latest children\n     * *committed* rather than the latest children *rendered*.\n     */\n    const pendingPresentChildren = useRef(presentChildren);\n    /**\n     * Track which exiting children have finished animating out.\n     */\n    const exitComplete = useConstant(() => new Map());\n    /**\n     * Save children to render as React state. To ensure this component is concurrent-safe,\n     * we check for exiting children via an effect.\n     */\n    const [diffedChildren, setDiffedChildren] = useState(presentChildren);\n    const [renderedChildren, setRenderedChildren] = useState(presentChildren);\n    useIsomorphicLayoutEffect(() => {\n        isInitialRender.current = false;\n        pendingPresentChildren.current = presentChildren;\n        /**\n         * Update complete status of exiting children.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const key = getChildKey(renderedChildren[i]);\n            if (!presentKeys.includes(key)) {\n                if (exitComplete.get(key) !== true) {\n                    exitComplete.set(key, false);\n                }\n            }\n            else {\n                exitComplete.delete(key);\n            }\n        }\n    }, [renderedChildren, presentKeys.length, presentKeys.join(\"-\")]);\n    const exitingChildren = [];\n    if (presentChildren !== diffedChildren) {\n        let nextChildren = [...presentChildren];\n        /**\n         * Loop through all the currently rendered components and decide which\n         * are exiting.\n         */\n        for (let i = 0; i < renderedChildren.length; i++) {\n            const child = renderedChildren[i];\n            const key = getChildKey(child);\n            if (!presentKeys.includes(key)) {\n                nextChildren.splice(i, 0, child);\n                exitingChildren.push(child);\n            }\n        }\n        /**\n         * If we're in \"wait\" mode, and we have exiting children, we want to\n         * only render these until they've all exited.\n         */\n        if (mode === \"wait\" && exitingChildren.length) {\n            nextChildren = exitingChildren;\n        }\n        setRenderedChildren(onlyElements(nextChildren));\n        setDiffedChildren(presentChildren);\n        /**\n         * Early return to ensure once we've set state with the latest diffed\n         * children, we can immediately re-render.\n         */\n        return;\n    }\n    if (process.env.NODE_ENV !== \"production\" &&\n        mode === \"wait\" &&\n        renderedChildren.length > 1) {\n        console.warn(`You're attempting to animate multiple children within AnimatePresence, but its mode is set to \"wait\". This will lead to odd visual behaviour.`);\n    }\n    /**\n     * If we've been provided a forceRender function by the LayoutGroupContext,\n     * we can use it to force a re-render amongst all surrounding components once\n     * all components have finished animating out.\n     */\n    const { forceRender } = useContext(LayoutGroupContext);\n    return (jsx(Fragment, { children: renderedChildren.map((child) => {\n            const key = getChildKey(child);\n            const isPresent = presentChildren === renderedChildren ||\n                presentKeys.includes(key);\n            const onExit = () => {\n                if (exitComplete.has(key)) {\n                    exitComplete.set(key, true);\n                }\n                else {\n                    return;\n                }\n                let isEveryExitComplete = true;\n                exitComplete.forEach((isExitComplete) => {\n                    if (!isExitComplete)\n                        isEveryExitComplete = false;\n                });\n                if (isEveryExitComplete) {\n                    forceRender === null || forceRender === void 0 ? void 0 : forceRender();\n                    setRenderedChildren(pendingPresentChildren.current);\n                    onExitComplete && onExitComplete();\n                }\n            };\n            return (jsx(PresenceChild, { isPresent: isPresent, initial: !isInitialRender.current || initial\n                    ? undefined\n                    : false, custom: isPresent ? undefined : custom, presenceAffectsLayout: presenceAffectsLayout, mode: mode, onExitComplete: isPresent ? undefined : onExit, children: child }, key));\n        }) }));\n};\n\nexport { AnimatePresence };\n","import { jsx } from 'react/jsx-runtime';\nimport { useState, useRef, useEffect } from 'react';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { loadFeatures } from '../../motion/features/load-features.mjs';\n\n/**\n * Used in conjunction with the `m` component to reduce bundle size.\n *\n * `m` is a version of the `motion` component that only loads functionality\n * critical for the initial render.\n *\n * `LazyMotion` can then be used to either synchronously or asynchronously\n * load animation and gesture support.\n *\n * ```jsx\n * // Synchronous loading\n * import { LazyMotion, m, domAnimation } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={domAnimation}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n *\n * // Asynchronous loading\n * import { LazyMotion, m } from \"framer-motion\"\n *\n * function App() {\n *   return (\n *     <LazyMotion features={() => import('./path/to/domAnimation')}>\n *       <m.div animate={{ scale: 2 }} />\n *     </LazyMotion>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction LazyMotion({ children, features, strict = false }) {\n    const [, setIsLoaded] = useState(!isLazyBundle(features));\n    const loadedRenderer = useRef(undefined);\n    /**\n     * If this is a synchronous load, load features immediately\n     */\n    if (!isLazyBundle(features)) {\n        const { renderer, ...loadedFeatures } = features;\n        loadedRenderer.current = renderer;\n        loadFeatures(loadedFeatures);\n    }\n    useEffect(() => {\n        if (isLazyBundle(features)) {\n            features().then(({ renderer, ...loadedFeatures }) => {\n                loadFeatures(loadedFeatures);\n                loadedRenderer.current = renderer;\n                setIsLoaded(true);\n            });\n        }\n    }, []);\n    return (jsx(LazyContext.Provider, { value: { renderer: loadedRenderer.current, strict }, children: children }));\n}\nfunction isLazyBundle(features) {\n    return typeof features === \"function\";\n}\n\nexport { LazyMotion };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { invariant } from '../../../utils/errors.mjs';\n\nfunction resolveElements(elements, scope, selectorCache) {\n    var _a;\n    if (typeof elements === \"string\") {\n        let root = document;\n        if (scope) {\n            invariant(Boolean(scope.current), \"Scope provided, but no element detected.\");\n            root = scope.current;\n        }\n        if (selectorCache) {\n            (_a = selectorCache[elements]) !== null && _a !== void 0 ? _a : (selectorCache[elements] = root.querySelectorAll(elements));\n            elements = selectorCache[elements];\n        }\n        else {\n            elements = root.querySelectorAll(elements);\n        }\n    }\n    else if (elements instanceof Element) {\n        elements = [elements];\n    }\n    /**\n     * Return an empty array\n     */\n    return Array.from(elements || []);\n}\n\nexport { resolveElements };\n","import { resolveElements } from '../utils/resolve-element.mjs';\n\nconst thresholds = {\n    some: 0,\n    all: 1,\n};\nfunction inView(elementOrSelector, onStart, { root, margin: rootMargin, amount = \"some\" } = {}) {\n    const elements = resolveElements(elementOrSelector);\n    const activeIntersections = new WeakMap();\n    const onIntersectionChange = (entries) => {\n        entries.forEach((entry) => {\n            const onEnd = activeIntersections.get(entry.target);\n            /**\n             * If there's no change to the intersection, we don't need to\n             * do anything here.\n             */\n            if (entry.isIntersecting === Boolean(onEnd))\n                return;\n            if (entry.isIntersecting) {\n                const newOnEnd = onStart(entry);\n                if (typeof newOnEnd === \"function\") {\n                    activeIntersections.set(entry.target, newOnEnd);\n                }\n                else {\n                    observer.unobserve(entry.target);\n                }\n            }\n            else if (onEnd) {\n                onEnd(entry);\n                activeIntersections.delete(entry.target);\n            }\n        });\n    };\n    const observer = new IntersectionObserver(onIntersectionChange, {\n        root,\n        rootMargin,\n        threshold: typeof amount === \"number\" ? amount : thresholds[amount],\n    });\n    elements.forEach((element) => observer.observe(element));\n    return () => observer.disconnect();\n}\n\nexport { inView };\n","import { useState, useEffect } from 'react';\nimport { inView } from '../render/dom/viewport/index.mjs';\n\nfunction useInView(ref, { root, margin, amount, once = false } = {}) {\n    const [isInView, setInView] = useState(false);\n    useEffect(() => {\n        if (!ref.current || (once && isInView))\n            return;\n        const onEnter = () => {\n            setInView(true);\n            return once ? undefined : () => setInView(false);\n        };\n        const options = {\n            root: (root && root.current) || undefined,\n            margin,\n            amount,\n        };\n        return inView(ref.current, onEnter, options);\n    }, [root, ref, margin, once, amount]);\n    return isInView;\n}\n\nexport { useInView };\n"],"names":["MotionConfigContext","createContext","p","MotionContext","PresenceContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","camelToDash","str","optimizedAppearDataId","optimizedAppearDataAttribute","MotionGlobalConfig","createRenderStep","runNextFrame","thisFrame","nextFrame","isProcessing","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","callback","step","keepAlive","immediate","queue","frameData","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","useDefaultElapsed","state","flagRunNextFrame","steps","acc","key","read","resolveKeyframes","update","preRender","render","postRender","processBatch","timestamp","wake","process","i","microtask","cancelMicrotask","isRefObject","ref","SwitchLayoutGroupContext","scheduleHandoffComplete","useVisualElement","Component","visualState","props","createVisualElement","ProjectionNodeConstructor","parent","useContext","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","visualElement","initialLayoutGroupConfig","createProjectionNode","useInsertionEffect","wantsHandoff","completeHandoff","initialPromotionConfig","layoutId","layout","drag","dragConstraints","layoutScroll","layoutRoot","getClosestProjectingNode","useMotionRef","externalRef","useCallback","instance","isVariantLabel","v","isAnimationControls","variantPriorityOrder","variantProps","isControllingVariants","name","isVariantNode","getCurrentTreeVariants","context","initial","animate","useCreateMotionContext","useMemo","variantLabelsAsDependency","prop","featureProps","featureDefinitions","loadFeatures","features","LayoutGroupContext","motionComponentSymbol","noop","any","invariant","createMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","MeasureLayout","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","getProjectionFunctionality","jsxs","jsx","ForwardRefComponent","forwardRef","layoutGroupId","combined","createMotionProxy","createConfig","custom","customMotionComponentConfig","componentCache","_target","lowercaseSVGElements","isSVGComponent","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","isMotionValue","value","getValueAsType","type","clamp","min","max","number","alpha","scale","sanitize","floatRegex","colorRegex","singleColorRegex","isString","isNullish","createUnitType","unit","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","translateAlias","numTransforms","buildTransform","latestValues","transform","transformTemplate","transformString","transformIsDefault","valueIsDefault","valueAsType","transformName","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","buildHTMLStyles","style","vars","transformOrigin","hasTransform","hasTransformOrigin","originX","originY","originZ","createHtmlRenderState","copyRawValuesOnly","target","source","useInitialMotionValues","useStyle","styleProp","useHTMLProps","htmlProps","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","filterProps","isDom","forwardMotionProps","filteredProps","calcOrigin","origin","offset","size","calcSVGTransformOrigin","dimensions","pxOriginX","pxOriginY","dashKeys","camelKeys","buildSVGPath","attrs","length","spacing","useDashCase","keys","pathLength","pathSpacing","buildSVGAttrs","attrX","attrY","attrScale","pathOffset","latest","isSVGTag","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","elementProps","Fragment","children","renderedChildren","createElement","renderHTML","element","projection","camelCaseAttributes","renderSVG","renderState","_styleProp","scrapeMotionValuesFromProps","prevProps","_a","newValues","scrapeMotionValuesFromProps$1","targetKey","getValueState","resolveVariantFromProps","definition","current","velocity","useConstant","init","isKeyframesTarget","isCustomValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","acceleratedValues","getWillChangeName","addUniqueItem","arr","item","removeItem","index","makeState","applyWillChange","createRenderState","onMount","makeLatestValues","makeUseVisualState","config","make","addWillChange","willChange","memberName","forEachDefinition","list","resolved","transitionEnd","transition","shouldApplyWillChange","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","valueTarget","frame","cancelFrame","svgMotionConfig","htmlMotionConfig","createDomMotionConfig","addDomEvent","eventName","handler","options","isPrimaryPointer","event","extractEventInfo","pointType","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","addHoverEvent","isActive","callbackName","handleEvent","info","HoverGesture","FocusGesture","isFocusVisible","isNodeOrChild","child","fireSyntheticPointerEvent","syntheticPointerEvent","PressGesture","startEvent","startInfo","removePointerUpListener","endEvent","endInfo","onTap","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","handleKeydown","keydownEvent","handleKeyup","keyupEvent","removeKeydownListener","handleBlur","removeBlurListener","onTapStart","whileTap","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","initIntersectionObserver","root","lookupRoot","rootObservers","observeIntersection","rootInteresectionObserver","thresholdNames","InViewFeature","viewport","rootMargin","amount","once","onIntersectionUpdate","isIntersecting","onViewportEnter","onViewportLeave","hasViewportOptionChanged","prevViewport","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","criticallyDampedSpring","keyframesTransition","ease","getDefaultTransition","valueKey","keyframes","isTransitionDefined","when","_delay","delayChildren","staggerChildren","staggerDirection","repeat","repeatType","repeatDelay","from","elapsed","getValueTransition","isNotNull","getFinalKeyframe","finalKeyframe","resolvedKeyframes","now","clearTime","time","newTime","isZeroValueString","isNone","isNumericalString","splitCSSVariableRegex","parseCSSVariable","match","token1","token2","fallback","getVariableValue","depth","trimmed","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","removedTransforms","positionalValues","x","paddingLeft","paddingRight","y","paddingTop","paddingBottom","top","left","testValueType","auto","dimensionValueTypes","findDimensionValueType","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","elementsToMeasure","transformsToRestore","restore","readAllKeyframes","flushKeyframeResolvers","KeyframeResolver","unresolvedKeyframes","onComplete","motionValue","isAsync","currentValue","valueAsRead","isColorString","testProp","splitColor","aName","bName","cName","c","clampRgbUnit","rgbUnit","rgba","red","green","blue","alpha$1","parseHex","r","g","hex","hsla","hue","saturation","lightness","color","test","_b","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","indexes","types","split","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","getAnimatableNone","parsed","complex","maxDefaults","applyDefaultFilter","defaultValue","functionRegex","filter","functions","defaultValueTypes","getDefaultValueType","defaultValueType","invalidTemplates","makeNoneKeyframesAnimatable","noneKeyframeIndexes","animatableTemplate","keyframe","noneIndex","DOMKeyframesResolver","originType","targetType","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","memo","result","isAnimatable","hasKeyframesChanged","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","BaseAnimation","autoplay","delay","onUpdate","isGenerator","resolvedAnimation","resolve","reject","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","t","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","duration","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","delta","calcAngularFreq","d","e","f","initialGuess","approximateRoot","stiffness","rootIterations","durationKeys","physicsKeys","isSpringType","getSpringOptions","springOptions","derived","spring","restDelta","restSpeed","damping","isResolvedFromDuration","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","dampedAngularFreq","freqForT","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","isOutOfBounds","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","binarySubdivide","lowerBound","upperBound","mX1","mX2","currentX","currentT","cubicBezier","mY1","mY2","getTForX","aX","easeIn","easeOut","easeInOut","isEasingArray","mirrorEasing","easing","reverseEasing","circIn","circOut","circInOut","backOut","backIn","backInOut","anticipate","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","progress","to","toFromDifference","mixNumber","hueToRgb","q","hslaToRgba","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","getColorType","asRGBA","model","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixVisibility","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","matchOrder","orderedOrigin","pointers","originIndex","originValue","template","originStats","targetStats","mix","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","interpolator","progressInRange","fillOffset","remaining","offsetProgress","defaultOffset","convertOffsetToTimes","o","defaultEasing","keyframeValues","times","easingFunctions","absoluteTimes","mapTimeToKeyframe","maxGeneratorDuration","calcGeneratorDuration","generator","timeStep","frameloopDriver","passTimestamp","generators","percentToProgress","MainThreadAnimation","KeyframeResolver$1","onStop","onResolved","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","calculatedDuration","resolvedDuration","totalDuration","sample","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","iterationProgress","done","isAnimationFinished","newSpeed","hasChanged","driver","onPlay","isBezierDefinition","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","mapEasingToNativeEasingWithDefault","mapEasingToNativeEasing","animateStyle","valueName","keyframeOptions","supportsWaapi","sampleDelta","requiresPregeneratedKeyframes","pregenerateKeyframes","sampleAnimation","pregeneratedKeyframes","AcceleratedAnimation","pregeneratedAnimation","animation","timeline","sampleTime","observeTimeline","prevProgress","onFrame","currentTime","supportsScrollTimeline","GroupPlaybackControls","animations","onResolve","onReject","propName","newValue","cancelAll","cancelTimeline","speed","methodName","controls","animateMotionValue","isHandoff","onEnd","valueTransition","shouldSkip","SubscriptionManager","numSubscriptions","MAX_VELOCITY_DELTA","isFloat","MotionValue","prevFrameValue","subscription","unsubscribe","eventManagers","passiveEffect","stopPassiveEffect","endAnimation","startAnimation","setMotionValue","setTarget","getOptimisedAppearId","WillChangeMotionValue","styleName","prevCount","hasRemoved","newCount","isWillChangeMotionValue","addValueToWillChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","animationTypeState","appearId","animateVariant","variant","getAnimation","getChildAnimations","forwardDelay","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateVisualElement","resolvedDefinition","reversePriorityOrder","numAnimationTypes","animateList","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","setAnimateFunction","makeAnimator","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","shouldAnimate","setActive","createTypeState","AnimationFeature","prevAnimate","id","ExitAnimationFeature","isPresent","onExitComplete","prevIsPresent","exitAnimation","register","createAxis","createBox","convertBoundingBoxToBox","right","bottom","transformBoxPoints","point","transformPoint","topLeft","bottomRight","measureViewportBox","prefersReducedMotion","hasReducedMotionListener","initPrefersReducedMotion","motionMediaQuery","setReducedMotionPreferences","updateMotionValuesFromProps","nextValue","prevValue","existingValue","latestValue","visualElementStore","valueTypes","findValueType","propEventHandlers","numVariantProps","VisualElement","_props","_prevProps","_visualElement","blockInitialAnimation","initialMotionValues","remove","feature","valueIsTransform","removeOnChange","removeOnRenderRequest","other","featureDefinition","isEnabled","FeatureConstructor","listenerName","listener","startAtParent","closestVariantNode","valueFromInitial","args","DOMVisualElement","getComputedStyle","HTMLVisualElement","defaultType","computedStyle","transformPagePoint","SVGVisualElement","createDomVisualElement","m","PopChildMeasure","React.Component","PopChild","useId","nonce","width","height","React.cloneElement","PresenceChild","presenceAffectsLayout","mode","presenceChildren","newChildrenMap","childId","isComplete","_","React.useEffect","getChildKey","onlyElements","filtered","Children","isValidElement","AnimatePresence","exitBeforeEnter","presentChildren","presentKeys","pendingPresentChildren","exitComplete","diffedChildren","setDiffedChildren","useState","setRenderedChildren","exitingChildren","nextChildren","forceRender","onExit","isEveryExitComplete","isExitComplete","LazyMotion","strict","setIsLoaded","isLazyBundle","loadedRenderer","renderer","loadedFeatures","domAnimation","resolveElements","elements","scope","selectorCache","thresholds","inView","elementOrSelector","onStart","activeIntersections","onIntersectionChange","newOnEnd","observer","useInView","margin","isInView","setInView","onEnter"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194]}